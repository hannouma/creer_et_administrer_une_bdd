<?php
require_once '../src/Booking.php';
require_once '../src/User.php';
require_once '../src/BackupManager.php';

// Start the session
session_start([
    'cookie_lifetime' => 86400, // 24 hours session lifetime
    'cookie_secure'   => true,  // Requires HTTPS
    'cookie_httponly' => true,  // Prevents client-side scripts from accessing cookies
    'use_strict_mode' => true   // Regenerates session ID on every request
]);

$dsn = 'mysql:host=localhost;dbname=cinemaBDD';
$username = 'user.php';
$password = 'Cinem@d4t4B@$e';

// Validate form submission and input data
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    $date = date('d-m-Y H:i:s');
    $statusId = 1; // Assuming the default status is 'pending'
    $sessionId = (int) $_POST['session_id']; 
    $userId = $_SESSION['loggedInUser']->getId(); // I have stored the user ID in the session
    $hallId = (int) $_POST['hall_id'];
    // To ensures that the value is treated as an integer, and any non-numeric characters will be converted to 0 and to ensure that the value is a positive integer,
    $fullTariffSeats = filter_var($_POST['fullTariffSeats'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]);
    $studentSeats = filter_var($_POST['studentSeats'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]);
    $under14Seats = filter_var($_POST['under14Seats'], FILTER_VALIDATE_INT, ['options' => ['min_range' => 0]]);



    // Calculate payment amount
    $paymentAmount = Booking::calculatePaymentAmount($fullTariffSeats, $studentSeats, $under14Seats);
    $paymentAmount = number_format($paymentAmount, 2);
    
    // Total number of seats
    $seatNumber = ($fullTariffSeats + $studentSeats + $under14Seats);

    // Create a new Booking object with the form data
    $booking = new Booking(
        null, // I have generated the booking ID
        null,
        $statusId,
        $paymentAmount,
        $seatNumber,
        $sessionId,
        $userId,
        $hallId
    );

    // Save the booking to the database
    $pdo = new PDO($dsn, $username, $password);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    try {
        $pdo->beginTransaction();

        if ($booking->makeBooking($pdo)) {
            // Fetch the booking ID generated by UUID
            $stmt = $pdo->prepare("SELECT booking_id FROM bookings WHERE user_id = :user_id ORDER BY date DESC LIMIT 1");
            $stmt->bindParam(':user_id', $userId, PDO::PARAM_STR);
            $stmt->execute();
            $row = $stmt->fetch(PDO::FETCH_ASSOC);
            if ($row) {
                $bookingId = $row['booking_id'];
                // Update the booking object with the fetched booking ID
                $booking->setBookingId($bookingId);
                echo "Tickets are booked but not confirmed until payment is received. Please select a payment method.";
                
                // Create an array containing the booking information
                $bookingInfo = array(
                    'bookingId' => $bookingId,
                    'userId' => $userId,
                    'sessionId' => $sessionId,
                    'hallId' => $hallId,
                    'paymentAmount' => $paymentAmount,
                    'seatNumber' => $seatNumber,
                    'paymentDate' => $date,   
                );

                // Backup the booking information
                BackupManager::backupBookingData($bookingInfo);
            } else {
                echo "Error fetching booking ID for the user.";
            }

            // Display payment method selection
            ?>
            <form action="process_payment.php" method="POST">
                <input type="hidden" name="booking_id" value="<?php echo htmlspecialchars($bookingId); ?>">
                <span> Your payment amount is : <?php echo $paymentAmount ?> â‚¬</span><br>
                <label for="payment_method">Select Payment Method:</label>
                <select name="payment_method" id="payment_method">
                    <option value="cash">Cash</option>
                    <option value="credit">Credit</option>
                </select>
                <input type="submit" value="Confirm Payment">
            </form>
            <?php
        } else {
            echo "Failed to process booking. Please try again later.";
        }

        $pdo->commit();
    } catch (PDOException $e) {
        $pdo->rollBack();
        echo "Error: " . htmlspecialchars($e->getMessage());
    }
} else {
    echo "Invalid request method. Please submit the form.";
}